---
- name: Erstelle eine Ubuntu-VM auf vSphere
  hosts: localhost
  become: false
  #gather_facts: false
  collections:
    - community.vmware
  #pre_tasks:
  #  - include_vars: vars.yml
  tasks:
  - name: Lade Ubuntu-ISO-Image herunter
    get_url:
      url: "{{ ubuntu_iso_url }}"
      dest: "{{ ubuntu_iso_local_path }}"
  
  - name: Erstelle virtuelle Maschine
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: "{{ vcenter_validate_certs }}"
      datacenter: "{{ vcenter_datacenter }}"
      name: "{{ vm_name }}"
      folder: "{{ vcenter_destination_folder }}"
      state: "{{ vm_state }}"
      guest_id: "{{ vm_guestid }}"
      cluster: "{{ vcenter_cluster }}"
      disk:
        - size_gb: "{{ vm_disk_gb }}"
          type: "{{ vm_disk_type }}"
          datastore: "{{ vm_disk_datastore }}"
      hardware:
        memory_mb: "{{ vm_hw_ram_mb }}"
        num_cpus: "{{ vm_hw_cpu_n }}"
        scsi: "{{ vm_hw_scsi }}"
      networks:
        - name: "{{ vm_net_name }}"
          device_name: "{{ vm_net_type }}"
          start_connected: yes
          switch_type: standard
      state: poweredoff
  
  - name: Konfiguriere virtuelle Maschine
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      datacenter: "{{ vcenter_datacenter }}"
      name: "{{ vm_name }}"
      folder: "{{ vcenter_destination_folder }}"
      guest_id: "{{ vm_guestid }}"
      hardware:
        memory_mb: "{{ vm_hw_ram_mb }}"
        num_cpus: "{{ vm_hw_cpu_n }}"
        scsi: "{{ vm_hw_scsi }}"
        devices:
        - cdrom:
            iso_path: "{{ ubuntu_iso_local_path }}"
            start_connected: yes
            type: client
      state: poweredon
    register: vm_info
  
  - name: Warte, bis die virtuelle Maschine gestartet ist
    local_action:
      module: wait_for
      timeout: 300
      host: "{{ vm_info.instance.hostname }}"
      port: 22
      state: started
  
  - name: Warte, bis die SSH-Verbindung verf√ºgbar ist
    local_action:
      module: wait_for
      timeout: 60
      host: "{{ vm_info.instance.ip_address }}"
      port: 22
      state: started
  
  - name: Warte, bis das Betriebssystem bootet
    local_action:
      module: wait_for
      timeout: 300
      host: "{{ vm_info.instance.ip_address }}"
      port: 22
